import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    Component {
        file: "SineWaveTest.h"
        name: "SineWaveTest"
        accessSemantics: "reference"
        prototype: "QObject"
        exports: ["Flight/SineWaveTest 1.0"]
        exportMetaObjectRevisions: [256]
        Property {
            name: "running"
            type: "bool"
            read: "running"
            notify: "runningChanged"
            index: 0
            isReadonly: true
        }
        Property {
            name: "sampleRate"
            type: "double"
            read: "sampleRate"
            write: "setSampleRate"
            notify: "sampleRateChanged"
            index: 1
        }
        Property {
            name: "bufferUsage"
            type: "int"
            read: "bufferUsage"
            notify: "bufferUsageChanged"
            index: 2
            isReadonly: true
        }
        Signal {
            name: "runningChanged"
            Parameter { name: "running"; type: "bool" }
        }
        Signal {
            name: "sampleRateChanged"
            Parameter { name: "rate"; type: "double" }
        }
        Signal {
            name: "bufferUsageChanged"
            Parameter { name: "usage"; type: "int" }
        }
        Signal {
            name: "samplesReady"
            Parameter { name: "timestamps"; type: "QVariantList" }
            Parameter { name: "channel0"; type: "QVariantList" }
            Parameter { name: "channel1"; type: "QVariantList" }
            Parameter { name: "channel2"; type: "QVariantList" }
            Parameter { name: "channel3"; type: "QVariantList" }
        }
        Method {
            name: "setSampleRate"
            Parameter { name: "rate"; type: "double" }
        }
        Method { name: "start" }
        Method {
            name: "start"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method { name: "stop" }
        Method {
            name: "reconfigure"
            Parameter { name: "params"; type: "QVariantMap" }
        }
        Method {
            name: "flushToQml"
            Parameter { name: "qmlOscilloscope"; type: "QObject"; isPointer: true }
        }
    }
}
